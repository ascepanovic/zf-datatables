<?php
$baseUrl = $this->baseUrl();
$urlPath = '/'.$this->module.'/'.$this->controller;
$datatablesPath = $baseUrl . '/js/DataTables-1.9.3';
// use Super Theme Switcher?
$themeSwitcher = true;
$httpMethod = ($_SERVER['HTTPS'] == "on") ? 'https://' : 'http://';

// jquery & jquery ui library
$this->headScript()->appendFile($httpMethod.'ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js');
$this->headScript()->appendFile($httpMethod.'ajax.googleapis.com/ajax/libs/jqueryui/1.9.2/jquery-ui.min.js');

if (!$themeSwitcher) {
    // default theme if not using Super Theme Switcher
    $this->headLink()->appendStylesheet($datatablesPath.'/examples/examples_support/themes/smoothness/jquery-ui-1.8.4.custom.css');
}
// necessary css for jquery ui to work
$this->headLink()->appendStylesheet($datatablesPath.'/extras/TableTools/media/css/TableTools_JUI.css');
$this->headLink()->appendStylesheet($datatablesPath.'/media/css/jquery.dataTables_themeroller.css');
// custom tweaks to ui
$this->headLink()->appendStylesheet($baseUrl.'/css/datatables.css');

// datatables library
$this->headScript()->appendFile($datatablesPath.'/media/js/jquery.dataTables.min.js', $type = 'text/javascript', $attrs = array());
// extra datatables features.. print, csv, pdf, and copy functions
$this->headScript()->appendFile($datatablesPath.'/extras/TableTools/media/js/ZeroClipboard.js', $type = 'text/javascript', $attrs = array());
$this->headScript()->appendFile($datatablesPath.'/extras/TableTools/media/js/TableTools.min.js', $type = 'text/javascript', $attrs = array());

// make datatables editable
if ($this->datatableOptions['editable'] == 1) {
    $this->headScript()->appendFile($baseUrl.'/js/datatables-editable/jquery.dataTables.editable.js', $type = 'text/javascript', $attrs = array());
    $this->headScript()->appendFile($baseUrl.'/js/jeditable/jquery.jeditable.min.js', $type = 'text/javascript', $attrs = array());
    // masked input for phone #
    $this->headScript()->appendFile($baseUrl.'/js/maskedinput/jquery.maskedinput.js', $type = 'text/javascript', $attrs = array());
    $this->headScript()->appendFile($baseUrl.'/js/jeditable/jquery.jeditable.masked.js', $type = 'text/javascript', $attrs = array());
    // jquery validate so we can validate before submitting changes
    $this->headScript()->appendFile($httpMethod.'ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js');
    $this->headScript()->appendFile($httpMethod.'ajax.aspnetcdn.com/ajax/jquery.validate/1.9/additional-methods.min.js');
    $this->headScript()->appendFile($baseUrl.'/js/jvalidate/jquery.validate.zipcode.js', $type = 'text/javascript', $attrs = array());
}

// Super Theme Switcher @see https://github.com/harborhoffer/Super-Theme-Switcher
if ($themeSwitcher) {
    $this->headScript()->appendFile($baseUrl.'/js/jquery.themeswitcher.min.js', $type = 'text/javascript', $attrs = array());
}

// custom js to make this page work
$this->headScript()->appendFile($baseUrl.'/js/datatables.js', $type = 'text/javascript', $attrs = array());

// jgrowl non-obtrusive messages
$this->headLink()->appendStylesheet($baseUrl.'/js/jgrowl/jquery.jgrowl.css');
$this->headScript()->appendFile($baseUrl.'/js/jgrowl/jquery.jgrowl_minimized.js', $type = 'text/javascript', $attrs = array());
?>
<div id="switcher"></div>
<table><tr><td>
<div class="div_<?= $this->datatableOptions['tableId'] ?>">
<a href="<?= $this->url(array('action'=>'add')) ?>"><?= $this->datatableOptions['addForm']['title'] ?></a>
<table id="<?= $this->datatableOptions['tableId'] ?>" class="display">
	<thead>
		<tr><?php
foreach ($this->datatableOptions['columns'] as $item) {
    echo '<th>';
    echo $this->escape($item['label']);
    echo '</th>';
} ?></tr>
	</thead>
<?php if ($this->datatableOptions['columnSearchPosition'] == 'thead') : ?>
	<thead>
		<tr>
<?php
foreach ($this->datatableOptions['columns'] as $item) {
    echo '<th>';
    if ($this->datatableOptions['columnSearchPosition'] == 'thead' && (bool)$item['columnSearch']['enable']) {
        switch ($item['columnSearch']['type']) {
            case 'text':
                echo '<input type="'.$item['columnSearch']['type'].'" name="'.$item['columnSearch']['name'].'" value="'.$item['columnSearch']['value'].'" class="'.$item['columnSearch']['class'].'"/><br/>';
                break;
            case 'select':
                break;
        }
    }
    echo '</th>';
} ?>
		</tr>
	</thead>
<?php endif; ?>
	<tbody>
		<tr>
			<td
				colspan="<?= count($this->datatableOptions['columns']) ?>"
				class="dataTables_empty">Loading data from server</td>
		</tr>
	</tbody>
	<tfoot>
		<tr>
<?php
foreach ($this->datatableOptions['columns'] as $item) {
    echo '<td class="ui-state-default '.$item['sClass'].'">';
    if ($this->datatableOptions['columnSearchPosition'] == 'tfoot' && (bool)$item['columnSearch']['enable']) {
        switch ($item['columnSearch']['type']) {
            case 'text':
                echo '<input type="'.$this->escape($item['columnSearch']['type']).'" name="'.$this->escape($item['columnSearch']['name']).'" value="'.$this->escape($item['columnSearch']['value']).'" class="'.$this->escape($item['columnSearch']['class']).'" style="padding:0;margin:0;"/>';
                break;
            case 'select':
                echo '<select name="'.$this->escape($item['columnSearch']['name']).'" class="'.$this->escape($item['columnSearch']['class']).' search_init" style="padding:0;margin:0;"/>';

                if ($item['columnSearch']['values']['value'] != "") {
                    $item['columnSearch']['values'] = array($item['columnSearch']['values']);
                }

                echo '<option label="Select" value="">Select</option>';

                foreach ((array)$item['columnSearch']['values'] as $item2) {
                    echo '<option label="'.$this->escape($item2['label']).'" value="'.$this->escape($item2['value']).'">'.$this->escape($item2['label']).'</option>';
                }

                echo '</select>';
                break;
        }
    } else {
        echo '<input type="hidden" name="'.$this->escape($item['columnSearch']['name']).'" value="" style="padding:0;margin:0;"/>';
    }
    echo '</td>';
} ?>
		</tr>
	</tfoot>
</table>
</div>
</td></tr></table>
<div id="deleteRowDialog"></div>
<script type="text/javascript">
//<![CDATA[
var oTable = null;
var dt_tableId = '<?= $this->escape($this->datatableOptions['tableId']) ?>';
var dt_columnSearchPosition = '<?= $this->datatableOptions['columnSearchPosition'] ?>';
var dt_delete = <?= (isset($this->datatableOptions['delete'])) ? 'true' : 'false' ?>;
var dt_makeEditable = <?= ($this->datatableOptions['editable'] == 1) ? 'true' : 'false' ?>;
var dt_options = {
    "bServerSide": <?= $this->datatableOptions['bServerSide'] ?>,
<? if (count($this->datatableOptions['buttons']) > 0) : ?>
    "oTableTools": {
        "sSwfPath": "<?= $datatablesPath ?>/extras/TableTools/media/swf/copy_csv_xls_pdf.swf",
        "sRowSelect": "<?= $this->datatableOptions['rowSelect'] ?>",
        "aButtons": [
            <? if (in_array('pdf',$this->datatableOptions['buttons'])) : ?>
                {
                    "sExtends": "pdf",
                    "sTitle": "<?= $this->escape($this->datatableOptions['reportTitle']) ?>",
                    "sPdfMessage": "<?= $this->escape($this->datatableOptions['pdfMessage']) ?>",
                    "sFileName": "<?= $this->escape($this->datatableOptions['reportFilename']) ?>.pdf",
                    "sPdfOrientation": "<?= $this->escape($this->datatableOptions['pdfOrientation']) ?>",
                    "sPdfSize": "<?= $this->escape($this->datatableOptions['$this->pdfSize']) ?>"
                },
                <? endif ?>
            <? if (in_array('csv',$this->datatableOptions['buttons'])) : ?>
                {
                    "sExtends": "csv",
                    "sTitle": "<?= $this->escape($this->datatableOptions['reportTitle']) ?>",
                    "sFileName": "<?= $this->escape($this->datatableOptions['reportFilename']) ?>.csv",
                    "sFieldBoundary": '"'
                },
                <? endif ?>
            <? if (in_array('copy',$this->datatableOptions['buttons'])) : ?>
                {
                    "sExtends": "copy",
                    "sButtonText": "Copy to clipboard"
                },
                <? endif ?>
            <? if (in_array('print',$this->datatableOptions['buttons'])) : ?>
                {
                    "sExtends": "print",
                    "sButtonText": "Print"
                }
                <? endif ?>
        ]
    },
    <? endif ?>
    "sAjaxSource": '<?= $this->baseUrl() ?><?= $urlPath ?>/datasource/?format=json',
    "fnInitComplete": function(oSettings, json) {
        $('#'+dt_tableId+' '+dt_columnSearchPosition+' :input').each( function (i) {
            var cols = oSettings.aoPreSearchCols;
            if (typeof cols[i].sSearch != 'undefined' && cols[i].sSearch != '') {
                $(this).val(cols[i].sSearch);
                $(this).removeClass('search_init');
            }
        } );
    },
    "aoColumns": [<?php
    $i = 0;
    $count = count((array)$this->datatableOptions['columns']);
    foreach ((array)$this->datatableOptions['columns'] as $item) {
        $array = array();
        if ($item['sortable'] == 1) {
            $array[] = 'bSortable: true';
        } else {
            $array[] = 'bSortable: false';
        }

        if ($item['hidden'] == 1) {
            $array[] = 'bVisible: false';
        } else {
            $array[] = 'bVisible: true';
        }

        if ($item['searchable'] == 1) {
            $array[] = 'bSearchable: true';
        } else {
            $array[] = 'bSearchable: false';
        }

        if (!empty($item['sClass'])) {
            $array[] = 'sClass: "'.$this->escape($item['sClass']).'"';
        }

        if (!empty($item['mDataProp'])) {
            $array[] = 'mDataProp: "'.$this->escape($item['mDataProp']) . '"';
        }

        if (!empty($item['sWidth'])) {
            $array[] = 'sWidth: "'.$this->escape($item['sWidth']) . '"';
        }

        echo '{'.implode(',',$array).'}';

        $i++;
        if ($i !== $count) {
            echo ',';
        }
    }
    ?>
    ],
    "aaSorting": [<?php
    $i = 0;
    $count = count((array)$this->datatableOptions['columns']);
    foreach ((array)$this->datatableOptions['columns'] as $item) {
        $array = array();
        if ($item['isSortDefault'] == 1 || $item['isSortDefault'] == "true") {
            $array[] = $i;
        }

        if (!empty($item['sortDefaultDirection'])) {
            $array[] = '"'.$item['sortDefaultDirection'].'"';
        }

        if (empty($array)) {
            $array[] = $i;
            $array[] = 'null';
        }

        $i++;

        if (count($array)>0) {
            echo '['.implode(',',$array).']';
            if ($i !== $count) {
                echo ',';
            }
        }
    }
    ?>],
<?= $this->datatableOptions['config'] ?>
};

<? if ($this->datatableOptions['editable'] == 1) : ?>
function makeEditable() {
    oTable.makeEditable({
        sUpdateURL: "<?= $this->url(array('action'=>'update')) ?>/?format=json",
        sAddURL: "<?= $this->url(array('action'=>'add')) ?>",
        sAddHttpMethod: "POST",
        oAddNewRowButtonOptions: {	label: "Add",
            icons: {primary:'ui-icon-plus'}
        },
        oAddNewRowFormOptions: {
            title: '<?= $this->datatableOptions['addForm']['title'] ?>',
            show: "blind",
            hide: "explode",
            modal: true
        }	,
        oAddNewRowOkButtonOptions: {
            label: "Confirm",
            icons: { primary: 'ui-icon-check' },
            name: "action",
            value: "add-new"
        },
        sDeleteHttpMethod: "GET",
        sDeleteURL: "<?= $this->url(array('action'=>'delete')) ?>/?format=json",
        "aoColumns": [<?php
            $i = 0;
            $count = count((array)$this->datatableOptions['columns']);
            foreach ((array)$this->datatableOptions['columns'] as $item) {
                if ((bool)$item['hidden']) {
                    continue;
                }

                $array = array();

                if (is_array($item['aoColumns'])) {
                    foreach ($item['aoColumns'] as $key2=>$item2) {
                        if ($key2 == 'data' && !empty($item2['loadValues']['model'])) {
                            $model = new $item2['loadValues']['model'];
                            $values = $model->$item2['loadValues']['method']();

                            $out = array();
                            foreach ($values as $key3=>$item3) {
                                $out[] = "['".App_Filter_EscapeJs::filter($key3,false)."','".App_Filter_EscapeJs::filter($item3,false)."']";
                            }

                            $countArray = count($array);
                            $array[$countArray] = "data: [['','Please select...'],";
                            $array[$countArray] .= implode(',',$out);
                            $array[$countArray] .= "]";
                        } else if (ctype_digit($item2)) {
                            $array[] = $this->escape($key2).': '.$item2;
                        } else if (ctype_alnum($item2) || (substr($item2,0,1) != '{' && substr($item2,0,1) != '[')) {
                            $array[] = $this->escape($key2).': "'.$this->escape($item2).'"';
                        } else {
                            $array[] = $this->escape($key2).': '.$item2;
                        }
                    }
                }

                echo '{'.implode(',',$array).'}';
                $i++;
                if ($i !== $count) {
                    echo ','.PHP_EOL;
                }
            }
            ?>
        ]
        <? if (isset($this->datatableOptions['delete'])) : ?>
            ,oDeleteRowButtonOptions: {	label: "Remove",
                icons: {primary:'ui-icon-trash'}
            },
            sAddDeleteToolbarSelector: ".dataTables_length",
            fnOnDeleting: function (tr, id, fnDeleteRow) {
                confirmDelete(id,fnDeleteRow);
                return false;
            },
            fnOnDeleted: function (result) {
                if (result == 'success') {
                    $.jGrowl.defaults.position = 'center';
                    $.jGrowl('<?= $this->escape($this->datatableOptions['delete']['success']) ?>',{ sticky: true, theme: 'successMessage' });
                } else {
                    $.jGrowl.defaults.position = 'center';
                    $.jGrowl('<?= $this->escape($this->datatableOptions['delete']['error']) ?>',{ sticky: true, theme: 'errorMessage' });
                }

            }
            <? endif ?>
    });
}
    <? endif ?>

<?php if ($themeSwitcher) : ?>
$(document).ready(function(){
    $("#switcher").themeswitcher({
        imgpath: "images/",
        loadTheme: "blitzer"
    });
//  $('#switcher').themeswitcher();
});
    <? endif ?>
//]]>
</script>
<? if ($this->datatableOptions['editable'] == 1) : ?>
<? //echo $this->form ?>
<!--<? //echo $this->render($this->scriptDirectory.'/_addNewRow.phtml') ?>-->
<? endif ?>
<?= $this->flashMessenger(); ?>
